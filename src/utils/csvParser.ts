import * as FileSystem from "expo-file-system";
import { Skill } from "../types";

/**
 * CSVファイルからスキルデータを読み込む関数
 * @returns スキルデータの配列
 */
export const loadSkillsFromCSV = async (): Promise<Skill[]> => {
  try {
    // CSVデータを直接ハードコードする
    // 実際のアプリでは、アセットからの読み込みや、APIからの取得などを行うべきですが、
    // 開発中の問題を回避するために、ここではデータを直接埋め込みます
    const fileContent = `分野,項目,レベル,スキル,解説
インフラエンジニア,サーバー,初級,基本構築/管理,Linuxサーバーのインストール、基本設定、ユーザー管理、ディスク管理ができる
インフラエンジニア,サーバー,初級,基本監視,CPU・メモリ・ディスク使用率等の監視、異常検知、監視ツール（Nagios・Zabbix等）の基本設定ができる
インフラエンジニア,サーバー,初級,OSセットアップ,Linux/Windowsサーバーの基本セットアップ、パッケージインストール、セキュリティアップデート適用ができる
インフラエンジニア,サーバー,初級,トラブルシューティング（初級）,基本的なサーバー障害の特定・解決、ログ確認、プロセス管理、ネットワーク診断ができる
インフラエンジニア,サーバー,中級,高可用性設計,クラスタリング、ロードバランシング、フェイルオーバー機能、冗長化構成の設計と実装ができる
インフラエンジニア,サーバー,中級,パフォーマンス最適化,サーバーボトルネック特定、リソース最適化、クエリ最適化、Webサーバー設定調整ができる
インフラエンジニア,サーバー,中級,サーバーリソース管理,CPU・メモリ・ディスク・ネットワークの効率的な監視・割り当て、オートスケーリング設定ができる
インフラエンジニア,サーバー,中級,中級Linux操作（LPIC2相当）,シェルスクリプト作成、システム起動管理、各種サーバー設定（DNS・Web・メール等）ができる
インフラエンジニア,サーバー,上級,インフラ全体設計,企業全体のサーバー・ネットワーク・ストレージ・セキュリティを含む全体アーキテクチャ設計ができる
インフラエンジニア,サーバー,上級,災害対策/BCP策定,システム障害・災害・サイバー攻撃に備えたバックアップ戦略・復旧手順・代替サイト計画の策定ができる
インフラエンジニア,サーバー,上級,大規模システム設計,数万〜数百万ユーザー対応のスケーラブルアーキテクチャ、分散システム、マイクロサービス設計ができる
インフラエンジニア,サーバー,上級,オンプレミス/クラウド連携設計,ハイブリッドクラウド環境の設計、データ連携、認証連携、ネットワーク接続設計ができる
インフラエンジニア,クラウド,初級,クラウドサービス基本利用,AWS・Azure・GCPの基本操作、主要サービス（ストレージ・DB・ネットワーク等）の利用ができる
インフラエンジニア,クラウド,初級,クラウドリソース管理,仮想マシンの作成・管理、起動・停止・サイズ変更、イメージ・スナップショット作成ができる
インフラエンジニア,クラウド,中級,IaC（Terraform等）,Terraformを使用したクラウドリソースのコード化、バージョン管理、再現性の高いインフラ構築ができる
インフラエンジニア,クラウド,中級,コンテナ技術（Docker/K8s）,Docker・Kubernetesを使用したコンテナ作成・管理・オーケストレーションができる
インフラエンジニア,クラウド,中級,クラウドコスト最適化,不要リソース削除、リザーブドインスタンス活用、オートスケーリング、予算管理によるコスト効率化ができる
インフラエンジニア,クラウド,中級,クラウド監視/セキュリティ対策,クラウドサービスを使用したリソース監視・アラート設定・IAM設定・暗号化実装ができる
インフラエンジニア,クラウド,上級,マルチクラウド設計,複数クラウドプラットフォーム連携アーキテクチャ、クラウド間接続・ID統合・フェイルオーバー設計ができる
インフラエンジニア,クラウド,上級,クラウドネイティブアーキテクチャ,マイクロサービス・サーバーレス・イベント駆動型アーキテクチャ、自動スケーリング・自己修復機能設計ができる
インフラエンジニア,クラウド,上級,クラウド移行計画,オンプレミスからクラウドへの移行戦略・段階的移行計画・データ移行・リスク分析の策定ができる
インフラエンジニア,クラウド,上級,サーバーレスアーキテクチャ,Lambda・Azure Functions等のサーバーレス関数・API Gateway・イベント駆動型設計ができる
インフラエンジニア,ネットワーク,初級,ネットワーク基本設定/設計,ルーター・スイッチの基本設定、IPアドレス・サブネット設計、基本ルーティング設定ができる
インフラエンジニア,ネットワーク,初級,ネットワーク運用・保守,ping・traceroute等での接続確認、基本的なVPN設定、ネットワーク障害の原因特定・解決ができる
インフラエンジニア,ネットワーク,中級,ネットワークセキュリティ設計,ファイアウォール配置・設定、ACL設計、IDS/IPS導入、DMZ設計、ネットワークセグメンテーションができる
インフラエンジニア,ネットワーク,中級,負荷分散設計,ロードバランサー選定・設定、負荷分散アルゴリズム選択、ヘルスチェック・フェイルオーバー設計ができる
インフラエンジニア,ネットワーク,中級,SD-WAN導入/運用,SD-WAN製品選定・設定、コントローラー設定、トラフィックポリシー・監視運用ができる
インフラエンジニア,ネットワーク,中級,VLAN/仮想ネットワーク設計,VLAN設計・実装、仮想環境でのネットワーク設計、ネットワークセグメンテーション設計ができる
インフラエンジニア,ネットワーク,上級,大規模ネットワーク設計,数千〜数万ノードのエンタープライズネットワーク、階層型アーキテクチャ、高度なルーティングプロトコル設計ができる
インフラエンジニア,ネットワーク,上級,グローバルネットワーク設計,複数国・地域にまたがるグローバル接続、地域ごとのインターネット接続・DNS設計ができる
インフラエンジニア,ネットワーク,上級,クラウド間ネットワーク連携,複数クラウド環境間の専用接続・VPN設計、ハイブリッドクラウドネットワーク設計ができる
インフラエンジニア,ネットワーク,上級,次世代ネットワークアーキテクチャ,SDN・IBN・NFVアーキテクチャ、5G/エッジコンピューティング、ゼロトラストネットワーク設計ができる
開発エンジニア（プログラマー）,プログラミング,初級,プログラミング言語活用,1〜2つの言語での基本コーディング（変数・条件分岐・ループ・関数等）、複数言語の使い分けができる
開発エンジニア（プログラマー）,プログラミング,初級,基本的なアルゴリズム知識,線形探索・二分探索・基本ソート・再帰処理・スタック/キューの基本操作ができる
開発エンジニア（プログラマー）,プログラミング,初級,バグ修正/リファクタリング,エラー原因特定・デバッガー使用・コード整理・可読性向上・コードレビュー対応ができる
開発エンジニア（プログラマー）,プログラミング,中級,設計パターンの実装,Singleton・Factory Method・Observer等のデザインパターン、MVC/MVVMアーキテクチャパターン実装ができる
開発エンジニア（プログラマー）,プログラミング,中級,パフォーマンス改善,プロファイリングツール使用、ボトルネック特定、メモリ最適化、アルゴリズム効率化ができる
開発エンジニア（プログラマー）,プログラミング,中級,ライブラリ/フレームワーク活用,主要フレームワーク（Spring Boot・Django・React・Angular等）の活用、適切なライブラリ選択ができる
開発エンジニア（プログラマー）,プログラミング,上級,技術選定/評価,要件に基づく技術比較・選定、新技術評価・導入判断、技術的負債分析・セキュリティリスク評価ができる
開発エンジニア（プログラマー）,プログラミング,上級,開発標準の策定,コーディング規約・命名規則策定、ソースコード管理ワークフロー・CI/CDパイプライン設計ができる
開発エンジニア（プログラマー）,プログラミング,上級,コーディング指導/レビュー,建設的フィードバック提供、アーキテクチャ設計指導、設計パターン適用アドバイスができる
開発エンジニア（プログラマー）,フロントエンド,初級,HTML/CSS基礎（解析/修正）,HTML構造理解・要素追加修正、CSSセレクタ理解・基本スタイル調整、Flexbox・Grid基本実装ができる
開発エンジニア（プログラマー）,フロントエンド,初級,JavaScript基礎（Ajax）,基本構文・DOM操作・イベント処理、fetch API・XMLHttpRequestによる非同期通信実装ができる
開発エンジニア（プログラマー）,フロントエンド,初級,レスポンシブデザイン基礎,メディアクエリ使用、相対単位の適切な使用、フレキシブルレイアウト・モバイルファースト実装ができる
開発エンジニア（プログラマー）,フロントエンド,中級,状態管理（Redux等）,Redux・Vuex・NgRx等の状態管理ライブラリ、非同期アクション処理、パフォーマンスを考慮した状態設計ができる
開発エンジニア（プログラマー）,フロントエンド,中級,SPA開発,クライアントサイドルーティング・ページ遷移、非同期データ取得・認証/認可実装ができる
開発エンジニア（プログラマー）,フロントエンド,中級,UIパフォーマンス最適化,レンダリング最適化、不要な再レンダリング防止、メモ化活用、画像・フォント最適化ができる
開発エンジニア（プログラマー）,フロントエンド,上級,フロントエンドアーキテクチャ設計,コンポーネント設計・状態管理戦略策定、データフロー・API通信層設計、テスト戦略策定ができる
開発エンジニア（プログラマー）,フロントエンド,上級,マイクロフロントエンド設計,マイクロフロントエンド分割戦略・通信設計、共有ライブラリ設計、独立デプロイパイプライン設計ができる
開発エンジニア（プログラマー）,フロントエンド,上級,パフォーマンス/アクセシビリティ最適化,Web Vitals最適化・コード分割・SSR/SSG適用、WAI-ARIA・キーボードナビゲーション実装ができる
開発エンジニア（プログラマー）,フロントエンド,上級,大規模フロントエンド開発管理,モノレポ管理・コンポーネントライブラリ設計、デザインシステム運用・セキュリティ対策ができる
開発エンジニア（プログラマー）,バックエンド,初級,基本的なAPI・CRUD実装,REST APIエンドポイント作成・HTTPメソッド適切使用、データベースCRUD操作・基本トランザクション処理ができる
開発エンジニア（プログラマー）,バックエンド,初級,データ処理/ETL設計,データフィルタリング・ソート・集計・変換、ETL処理フロー設計・データクレンジングができる
開発エンジニア（プログラマー）,バックエンド,初級,シンプルなバックエンド構築,基本Webサーバー設定・データベース接続、基本ルーティング・MVC実装・認証機能実装ができる
開発エンジニア（プログラマー）,バックエンド,中級,RESTful API設計,リソース指向設計・適切なURI設計・HTTPステータスコード使用、バージョニング戦略設計ができる
開発エンジニア（プログラマー）,バックエンド,中級,セキュアなバックエンド設計,認証・認可実装（JWT・OAuth2等）、入力バリデーション・SQLインジェクション/XSS/CSRF対策ができる
開発エンジニア（プログラマー）,バックエンド,中級,キャッシュ戦略,メモリキャッシュ（Redis・Memcached等）導入・設定、分散キャッシュ設計・CDN活用ができる
開発エンジニア（プログラマー）,バックエンド,中級,マイクロサービス基礎,サービス分割設計・サービス間通信実装、APIゲートウェイ・サービスディスカバリー実装ができる
開発エンジニア（プログラマー）,バックエンド,上級,大規模バックエンドアーキテクチャ,高トラフィック対応アーキテクチャ・スケーリング戦略策定、データベースシャーディング/レプリケーション設計ができる
開発エンジニア（プログラマー）,バックエンド,上級,マイクロサービス設計,ドメイン駆動設計によるサービス境界定義・イベント駆動アーキテクチャ設計・回復性パターン実装ができる
開発エンジニア（プログラマー）,バックエンド,上級,負荷分散/スケーラビリティ設計,マルチリージョン設計・グローバルロードバランシング・オートスケーリング・負荷テスト実施ができる
開発エンジニア（プログラマー）,バックエンド,上級,API設計標準化,API設計ガイドライン策定・バージョニング戦略・エラーハンドリング標準化・API文書化自動化ができる
開発エンジニア（SE）,設計,初級,詳細設計書作成,画面設計書・API仕様書・データベース設計書・処理フロー図等の詳細設計ドキュメント作成ができる
開発エンジニア（SE）,設計,初級,テスト設計・実施,単体・結合テスト仕様書作成・テストケース設計、テスト実施・バグ報告・結果記録ができる
開発エンジニア（SE）,設計,初級,要件定義・レビュー,要件ヒアリング・要件一覧作成・業務フロー図作成、要件レビュー主導・品質向上活動ができる
開発エンジニア（SE）,設計,中級,基本設計書作成,システム構成図・外部インターフェース仕様・データフロー図・非機能要件整理ができる
開発エンジニア（SE）,設計,中級,DB設計/データモデリング,ER図作成・正規化・テーブル設計・インデックス設計・データ整合性ルール策定ができる
開発エンジニア（SE）,設計,中級,統合テスト設計,システム全体の統合テスト設計・シナリオテスト設計・テスト自動化設計ができる
開発エンジニア（SE）,設計,上級,システム全体設計,大規模システムアーキテクチャ設計・サブシステム分割・セキュリティ/パフォーマンス設計ができる
開発エンジニア（SE）,設計,上級,大規模システム設計,数百人月規模システム設計・複数チーム開発前提設計・分散システム/マイクロサービス設計ができる
開発エンジニア（SE）,設計,上級,全体最適化設計,既存システム連携最適化・コスト最適化・運用負荷軽減・将来拡張性を考慮した設計ができる
開発エンジニア（SE）,設計,上級,要件定義からの上流工程主導,顧客折衝・要件定義会議ファシリテーション・設計方針策定・プロジェクト全体リードができる
開発エンジニア（SE）,データベース,初級,基本CRUD操作,SQLによるデータ追加・取得・更新・削除、WHERE句・ORDER BY・LIMIT等の基本操作ができる
開発エンジニア（SE）,データベース,初級,簡易クエリ作成,複数テーブルJOIN・GROUP BY集計・サブクエリ・LIKE検索等の業務SQL作成ができる
開発エンジニア（SE）,データベース,初級,テーブル設計基礎,主キー・外部キー設定・データ型選定・制約設定・基本インデックス設計ができる
開発エンジニア（SE）,データベース,初級,基本的なSQL最適化,インデックス活用・実行計画確認・N+1問題回避・バルクインサート利用ができる
開発エンジニア（SE）,データベース,中級,DB設計/正規化,ER図作成・第三正規形までの正規化・リレーション設計・参照整合性確保ができる
開発エンジニア（SE）,データベース,中級,パフォーマンスチューニング,クエリ最適化・インデックス設計見直し・パーティショニング・ロック競合回避ができる
開発エンジニア（SE）,データベース,中級,NoSQL基礎,MongoDB・Redis・Cassandra等の特徴理解・スキーマレス設計・用途に応じた選定ができる
開発エンジニア（SE）,データベース,上級,大規模DB設計,数億件規模テーブル設計・パーティショニング/シャーディング設計・災害対策設計ができる
開発エンジニア（SE）,データベース,上級,分散DB設計,マルチリージョン構成・レプリケーション設計・分散トランザクション・データ整合性担保設計ができる
開発エンジニア（SE）,データベース,上級,データウェアハウス設計,スタースキーマ・ファクト/ディメンションテーブル設計・BIツール連携・データマート設計ができる
開発エンジニア（SE）,データベース,上級,高度なリレーショナル/NoSQL構成,RDB・NoSQLハイブリッド構成・データレイク設計・リアルタイム分析基盤設計ができる
開発エンジニア（SE）,開発プロセス,初級,バージョン管理基礎,Git基礎操作（クローン・コミット・プッシュ・プル・ブランチ・マージ・コンフリクト解消）ができる
開発エンジニア（SE）,開発プロセス,初級,ウォーターフォール開発参加,要件定義→設計→実装→テスト→リリース工程理解・各工程での成果物作成・レビュー参加ができる
開発エンジニア（SE）,開発プロセス,初級,アジャイル開発参加,スプリント計画・デイリースクラム・レビュー・レトロスペクティブ参加・イテレーション開発ができる
開発エンジニア（SE）,開発プロセス,中級,CI/CD構築,GitHub Actions・Jenkins等のCI/CDツール設定・ビルド/テスト/デプロイ自動化ができる
開発エンジニア（SE）,開発プロセス,中級,テスト自動化,ユニット・結合・E2Eテスト自動化・テストコード作成・テストカバレッジ測定ができる
開発エンジニア（SE）,開発プロセス,中級,アジャイル開発推進,スクラムマスター/PO補佐・スプリント計画ファシリテーション・アジャイルプラクティス導入ができる
開発エンジニア（SE）,開発プロセス,中級,品質管理プロセス整備,品質基準策定・レビュー/テストプロセス標準化・品質指標可視化・品質管理ツール運用ができる
開発エンジニア（SE）,開発プロセス,上級,開発プロセス改善,現状分析・課題抽出・プロセス改善提案・標準化/自動化推進・改善効果測定ができる
開発エンジニア（SE）,開発プロセス,上級,DevOps文化構築,開発運用連携強化・インフラ自動化・IaC導入・継続的デリバリー推進・DevOpsツールチェーン整備ができる
開発エンジニア（SE）,開発プロセス,上級,品質保証体制整備,QA組織立ち上げ・品質保証計画策定・テスト自動化基盤整備・品質KPI設定管理ができる
開発エンジニア（SE）,開発プロセス,上級,アジャイルスクラムマスター,スクラムイベントファシリテーション・チーム障害除去・自己組織化支援・アジャイルコーチングができる
開発エンジニア（SE）,セキュリティ,初級,基本的なセキュリティ対策,パスワードハッシュ化・HTTPS通信・アクセス制御・セッション管理・ファイアウォール設定ができる
開発エンジニア（SE）,セキュリティ,初級,脆弱性対応,脆弱性診断ツール利用・脆弱性情報収集・パッチ適用・脆弱性管理表作成ができる
開発エンジニア（SE）,セキュリティ,初級,認証/認可の基本実装,ログイン/ログアウト機能・ユーザー権限管理・セッション管理・トークン認証（JWT等）実装ができる
開発エンジニア（SE）,セキュリティ,初級,セキュアコーディング基礎,入力バリデーション・サニタイズ・SQLインジェクション/XSS/CSRF対策・セキュリティガイドライン遵守ができる
開発エンジニア（SE）,セキュリティ,中級,セキュリティ設計,脅威分析・セキュリティ要件定義・セキュリティアーキテクチャ設計・暗号化設計ができる
開発エンジニア（SE）,セキュリティ,中級,脆弱性診断/対策,Webアプリケーション/ネットワーク脆弱性診断・診断レポート作成・脆弱性管理プロセス整備ができる
開発エンジニア（SE）,セキュリティ,中級,OAuth/OIDC実装,外部IDプロバイダー連携・アクセス/リフレッシュトークン管理・SSO実装ができる
開発エンジニア（SE）,セキュリティ,中級,セキュリティレビュー実施,設計書・ソースコードセキュリティレビュー・脆弱性チェックリスト活用・セキュリティ教育実施ができる
開発エンジニア（SE）,セキュリティ,上級,セキュリティ基盤設計,認証基盤・ID管理基盤・アクセス制御基盤・ログ管理基盤・監査基盤設計ができる
開発エンジニア（SE）,セキュリティ,上級,セキュリティポリシー策定,情報セキュリティポリシー作成・運用ルール策定・ポリシー遵守監査・関係者啓発活動ができる
開発エンジニア（SE）,セキュリティ,上級,セキュリティインシデント対応,インシデント初動対応・調査分析・影響範囲特定・再発防止策立案・対応訓練実施ができる
開発エンジニア（SE）,セキュリティ,上級,ゼロトラスト設計,ゼロトラストネットワークアーキテクチャ設計・認証/認可強化・マイクロセグメンテーション実装ができる
マネジメント,マネジメント,初級,小規模チーム管理（〜5人）,日々の進捗確認・メンバータスク割り振り・チーム内コミュニケーション・1on1ミーティング実施ができる
マネジメント,マネジメント,初級,タスク配分/進捗管理,タスク洗い出し・優先順位付け・ガントチャート/カンバンボード利用・遅延フォロー・課題管理ができる
マネジメント,マネジメント,初級,チーム内調整,メンバー間役割分担・スケジュール調整・意見すり合わせ・会議ファシリテーション・チーム目標共有ができる
マネジメント,マネジメント,初級,顧客折衝基礎,要件ヒアリング・進捗報告・課題調整・議事録作成・顧客信頼関係構築ができる
マネジメント,マネジメント,初級,小規模予算管理,コスト見積もり・予算配分・コスト実績管理・経費精算・予算超過対応ができる
マネジメント,マネジメント,中級,中規模プロジェクト管理,WBS作成・進捗/課題/リスク管理・複数チーム調整・プロジェクト計画書作成ができる
マネジメント,マネジメント,中級,リスク管理,リスク洗い出し・評価・対応策立案・リスク管理表作成・リスク発生時対応ができる
マネジメント,マネジメント,中級,ステークホルダー管理,関係者一覧作成・影響度分析・コミュニケーション計画策定・定期情報共有・合意形成推進ができる
マネジメント,マネジメント,中級,顧客折衝,要件変更調整・納期交渉・契約内容確認・顧客満足度向上・クレーム対応ができる
マネジメント,マネジメント,中級,予算/工数管理,コスト・工数見積もり・予実管理・工数配分・コスト削減施策・月次報告書作成ができる
マネジメント,マネジメント,上級,複数プロジェクト統括,複数プロジェクト進捗・リソース・課題管理・横断的リスク管理・全体最適化推進ができる
マネジメント,マネジメント,上級,プロジェクト間調整,リソース再配分・スケジュール調整・課題/リスク共有・ナレッジ共有・連携施策実施ができる
マネジメント,マネジメント,上級,事業戦略策定,事業計画書作成・KPI設定・マーケット/競合分析・成長戦略立案・投資計画策定ができる
マネジメント,マネジメント,上級,組織マネジメント,組織構造設計・人材育成計画・評価制度設計・組織文化醸成・組織課題改善ができる
マネジメント,マネジメント,上級,経営層とのコミュニケーション,経営会議参加・経営層レポーティング・経営方針現場展開・経営層向け資料作成ができる`;

    // CSVを手動でパースする（csv-parseパッケージの代わりに）
    const lines = fileContent.split("\n");
    const headers = lines[0].split(",");

    const records = [];
    for (let i = 1; i < lines.length; i++) {
      const line = lines[i].trim();
      if (line) {
        const values = line.split(",");
        const record: any = {};

        headers.forEach((header, index) => {
          record[header] = values[index];
        });

        records.push(record);
      }
    }

    // 各レコードにIDを付与する
    return records.map((record: any, index: number) => ({
      ...record,
      id: index + 1,
    }));
  } catch (error) {
    console.error("CSVファイルの読み込みに失敗しました:", error);
    return [];
  }
};

/**
 * スキルデータから一意のカテゴリー（分野と項目の組み合わせ）を抽出する関数
 * @param skills スキルデータの配列
 * @returns カテゴリーの配列
 */
export const extractCategories = (skills: Skill[]) => {
  const categories = new Map<string, Set<string>>();

  skills.forEach((skill) => {
    if (!categories.has(skill.分野)) {
      categories.set(skill.分野, new Set());
    }
    categories.get(skill.分野)?.add(skill.項目);
  });

  return Array.from(categories).map(([category, items]) => ({
    category,
    items: Array.from(items),
  }));
};

/**
 * スキルデータを分野ごとにグループ化する関数
 * @param skills スキルデータの配列
 * @returns 分野ごとにグループ化されたスキルデータ
 */
export const groupSkillsByField = (skills: Skill[]) => {
  const grouped = new Map<string, Skill[]>();

  skills.forEach((skill) => {
    if (!grouped.has(skill.分野)) {
      grouped.set(skill.分野, []);
    }
    grouped.get(skill.分野)?.push(skill);
  });

  return grouped;
};

/**
 * スキルデータを分野と項目でグループ化する関数
 * @param skills スキルデータの配列
 * @returns 分野と項目でグループ化されたスキルデータ
 */
export const groupSkillsByCategoryAndItem = (skills: Skill[]) => {
  const grouped = new Map<string, Map<string, Skill[]>>();

  skills.forEach((skill) => {
    if (!grouped.has(skill.分野)) {
      grouped.set(skill.分野, new Map());
    }

    const categoryMap = grouped.get(skill.分野);
    if (!categoryMap?.has(skill.項目)) {
      categoryMap?.set(skill.項目, []);
    }

    categoryMap?.get(skill.項目)?.push(skill);
  });

  return grouped;
};
